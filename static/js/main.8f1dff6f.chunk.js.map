{"version":3,"sources":["store/slices.js","components/ItemRow/ItemRow.jsx","components/ItemRow/ItemRow.style.js","components/Input/Input.jsx","components/Input/Input.style.js","components/Button/Button.jsx","components/Button/Button.style.js","components/ItemRowInput/ItemRowInput.logic.js","components/Select/Select.jsx","components/Select/Select.style.js","components/DatePicker/DatePicker.jsx","components/DatePicker/DatePicker.style.js","components/ItemRowInput/ItemRowInput.jsx","components/ItemRowInput/ItemRowInput.style.js","hooks/useGetDataByURL.js","components/ItemsListItemRow/ItemsListItemRow.jsx","components/ItemsListItemRow/ItemsListItemRow.style.js","utils.js","components/ItemsListHeader/ItemsListHeader.jsx","components/ItemsListHeader/ItemsListHeader.style.js","tabs/ItemsList/ItemsList.jsx","tabs/ItemsList/ItemsList.style.js","tabs/ItemsList/ItemsList.logic.js","tabs/StoresList/StoresList.jsx","tabs/StoresList/StoresList.style.js","tabs/StoresList/StoresList.logic.js","components/Link/Link.jsx","components/Link/Link.style.js","components/CurrencyIntervalInput/CurrencyIntervalInput.jsx","components/CurrencyIntervalInput/CurrencyIntervalInput.style.js","components/Header/Header.jsx","components/Header/Header.style.js","components/SnackBar/SnackBar.jsx","components/SnackBar/SnackBar.style.js","pages/Page/Page.jsx","pages/Page/Page.style.js","hooks/useUpdateCurrency.js","App.js","App.style.js","serviceWorker.js","store/store.js","MuiTheme.js","index.js"],"names":["currencySlice","createSlice","name","initialState","USDtoILS","intervalForCurrencyUpdate","reducers","setUSDtoILS","state","action","payload","setIntervalForCurrencyUpdate","snackSlice","open","message","severity","closeSnack","openSnack","itemsSlice","currentUniqueId","items","recievedItems","stores","initState","addItem","newState","id","localStorage","setItem","JSON","stringify","recieveItem","newItems","useStyles","makeStyles","theme","itemRow","padding","default","margin","border","borderRadius","display","justifyContent","alignItems","breakpoints","down","flexDirection","ItemRow","children","className","classes","input","Input","adornment","label","onChange","type","value","TextField","InputProps","startAdornment","InputAdornment","position","undefined","button","minWidth","sizes","buttonMinWidth","Button","variant","onClick","disabled","color","useItemRowInput","dispatch","useDispatch","useSelector","useState","setName","price","setPrice","Date","date","setDate","store","setStore","handleSubmit","length","actions","isNaN","includes","getTime","Select","FormControl","InputLabel","shrink","htmlFor","labelId","map","option","MenuItem","key","DatePicker","format","ItemRowInput","flexWrap","ItemRowInput__Input","width","marginBottom","ItemRowInput__name","e","target","ItemRowInput__price","ItemRowInput__date","ItemRowInput__store","useGetDataByURL","isItemsURL","useHistory","location","pathname","sliceToTakeData","dataFromSlice","ItemsListRowItem","ItemsListRowItem__price","ItemsListRowItem__data","ItemsListItemRow","item","isShowRecievedButton","useTheme","xsMediaQuery","useMediaQuery","currency","ItemsListRowItem__data__label","ItemsListRowItem__data__value","toFixed","newDate","getDate","getMonth","getFullYear","ItemsListHeader__data","ItemsListHeader__spaceForButton","ItemsListHeader","itemsList","large","ItemsList","matches","Object","keys","storesList","StoresList","storesData","forEach","parseData","storeName","link","colors","primary","Link","props","CurrencyIntervalInput","interval","setInterval","useEffect","Header","Header_links","to","SnackBar","SnackBar__Alert","Alert","elevation","snack","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","BoughtPage","Page","React","tabIndex","setTabIndex","AppBar","Tabs","index","aria-label","Tab","fetchCurrency","a","axios","result","console","log","data","rates","ILS","boxSizing","textDecoration","App","fontFamily","typography","fontSize","fontSizes","currencyUpdateInterval","useRef","current","clearInterval","useUpdateCurrency","parse","getItem","exact","path","Boolean","window","hostname","match","configureStore","reducer","base","light","dark","secondary","font","invert","palette","main","values","xs","sm","md","lg","xl","h1","h2","small","shadow","createMuiTheme","MuiTheme","ReactDOM","render","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8f1dff6f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst INTERVAL_FOR_CURRENCY_UPDATE = 1000;\n\nexport const currencySlice = createSlice({\n  name: \"currency\",\n  initialState: {\n    USDtoILS: null,\n    intervalForCurrencyUpdate: INTERVAL_FOR_CURRENCY_UPDATE,\n  },\n  reducers: {\n    setUSDtoILS: (state, action) => ({ ...state, USDtoILS: action.payload }),\n    setIntervalForCurrencyUpdate: (state, action) => ({ ...state, intervalForCurrencyUpdate: action.payload })\n  },\n});\n\nexport const snackSlice = createSlice({\n  name: \"snack\",\n  initialState: {\n    open: false,\n    message: '',\n    severity: 'error',\n  },\n  reducers: {\n    closeSnack: (state, action) => ({ ...state, open: false }),\n    openSnack: (state, action) => ({ open: true, message: action.payload.message, severity: action.payload.severity ? action.payload.severity : 'error', })\n  }\n})\n\nexport const itemsSlice = createSlice({\n  name: \"items\",\n  initialState: {\n    currentUniqueId: 0,\n    items: {},\n    recievedItems: {},\n    stores: [\n      'Amazon',\n      'Ebay',\n      'Aliexpress',\n    ],\n  },\n  reducers: {\n    initState: (state, action) => action.payload.state,\n    addItem: (state, action) => {\n      const newState = {\n        ...state,\n        items: { ...state.items, [state.currentUniqueId]: { ...action.payload, id: state.currentUniqueId } },\n        currentUniqueId: state.currentUniqueId + 1,\n      };\n      localStorage.setItem(\"state\", JSON.stringify(newState));\n\n      return newState;\n    },\n    recieveItem: (state, action) => {\n\n      const newItems = { ...state.items };\n      delete newItems[action.payload.id];\n\n      const newState = {\n        ...state,\n        items: { ...newItems },\n        recievedItems: { ...state.recievedItems, [action.payload.id]: state.items[action.payload.id] },\n      };\n      localStorage.setItem(\"state\", JSON.stringify(newState));\n\n      return newState;\n    },\n  },\n});\n\n","import React from \"react\";\nimport MuiStyleFunction from \"./ItemRow.style\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst ItemRow = ({ children, className }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.itemRow} ${className ? className : \"\"}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default ItemRow;\n","\nexport default (theme) => ({\n    itemRow: {\n        padding: theme.padding.default,\n        margin: `${theme.margin.default} 0 `,\n        border: theme.border.default,\n        borderRadius: theme.borderRadius.default,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n\n})","import React from \"react\";\nimport MuiStyleFunction from \"./Input.style\";\nimport {} from \"./Input.logic\";\nimport { makeStyles, TextField, InputAdornment } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Input = ({\n  adornment,\n  label = \"\",\n  onChange = () => {},\n  type = \"text\",\n  value,\n  className\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      label={label}\n      className={`${classes.input} ${className ? className : ''}`}\n      onChange={onChange}\n      type={type}\n      value={value}\n      InputProps={\n        adornment\n          ? {\n              startAdornment: (\n                <InputAdornment position=\"start\">{adornment}</InputAdornment>\n              ),\n            }\n          : undefined\n      }\n    />\n  );\n};\n\nexport default Input;\n","\nexport default (theme) => ({\n    input: {\n        margin: `0 ${theme.margin.default}`\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./Button.style\";\nimport {} from \"./Button.logic\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MUIButton from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Button = ({\n  variant,\n  className,\n  children,\n  onClick = () => {},\n  disabled = false,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <MUIButton\n      className={`${classes.button} ${className ? className : \"\"}`}\n      variant={variant}\n      onClick={onClick}\n      disabled={disabled}\n      color=\"primary\"\n    >\n      <div>{children}</div>\n    </MUIButton>\n  );\n};\n\nexport default Button;\n","\nexport default (theme) => ({\n    button: {\n        minWidth: theme.sizes.buttonMinWidth,\n    }\n})","import {\n    useState,\n} from \"react\";\nimport { itemsSlice, snackSlice } from \"../../store/slices\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nexport const useItemRowInput = () => {\n    const dispatch = useDispatch();\n    const { stores } = useSelector((state) => state.items);\n\n\n    const [name, setName] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [date, setDate] = useState(new Date());\n    const [store, setStore] = useState('');\n\n    const validateSubmit = () => {\n\n\n        if (!name || name.length < 2) {\n            dispatch(snackSlice.actions.openSnack({ message: \"please enter a valid name. string with more than 2 letters expected\" }));\n            return false\n        }\n        if (!price || isNaN(price)) {\n            dispatch(snackSlice.actions.openSnack({ message: \"please enter a valid price. positive number is expected\" }));\n            return false\n        }\n        if (!date) {\n            dispatch(snackSlice.actions.openSnack({ message: \"please enter a valid date\" }));\n            return false\n        }\n        if (!store || !stores.includes(store)) {\n            dispatch(snackSlice.actions.openSnack({ message: \"please choose one of the stores from the dropdown\" }));\n            return false\n        }\n        return true;\n    };\n\n    const handleSubmit = () =>\n        validateSubmit() &&\n        dispatch(itemsSlice.actions.addItem({ name, price, date: date.getTime(), store }));\n\n    return {\n        name,\n        setName,\n        price,\n        setPrice,\n        date,\n        setDate,\n        store,\n        setStore,\n        stores,\n        handleSubmit,\n    }\n}\n","import React from \"react\";\nimport MuiStyleFunction from \"./Select.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n  InputLabel,\n  Select as MuiSelect,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Select = ({\n  label,\n  onChange = () => {},\n  children = [],\n  value,\n  className,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={`${classes.Select} ${className ? className : \"\"}`}>\n      <InputLabel shrink htmlFor={label}>\n        {label}\n      </InputLabel>\n      <MuiSelect value={value} onChange={onChange} labelId={label} id={label}>\n        {children &&\n          children.map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n      </MuiSelect>\n    </FormControl>\n  );\n};\n\nexport default Select;\n","\nexport default (theme) => ({\n    Select: {\n        minWidth: '150px',\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./DatePicker.style\";\nimport {} from \"./DatePicker.logic\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst DatePicker = ({\n  onChange = () => {},\n  value,\n  label,\n  format = \"dd/MM/yyyy\",\n  id,\n  className,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <KeyboardDatePicker\n      className={`${classes.DatePicker} ${\n        className ? className : classes.DatePicker\n      }`}\n      margin=\"normal\"\n      id={id}\n      label={label}\n      format={format}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default DatePicker;\n","\nexport default (theme) => ({\n    DatePicker: {\n        margin: `0 `\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./ItemRowInput.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"../Input/Input.jsx\";\nimport Button from \"../Button/Button.jsx\";\nimport { useItemRowInput } from \"./ItemRowInput.logic\";\nimport Select from \"../Select/Select.jsx\";\nimport DatePicker from \"../DatePicker/DatePicker.jsx\";\nimport ItemRow from '../ItemRow/ItemRow.jsx'\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst ItemRowInput = () => {\n  const classes = useStyles();\n\n  const {\n    name,\n    setName,\n    price,\n    setPrice,\n    date,\n    setDate,\n    store,\n    stores,\n    setStore,\n    handleSubmit,\n  } = useItemRowInput();\n\n  return (\n    <>\n      <h2>Add an item:</h2>\n      <ItemRow className={classes.ItemRowInput}>\n        <Input\n          label={\"name\"}\n          className={`${classes.ItemRowInput__name} ${classes.ItemRowInput__Input}`}\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        ></Input>\n        <Input\n          label={\"price\"}\n          type=\"number\"\n          adornment=\"$\"\n          className={`${classes.ItemRowInput__price} ${classes.ItemRowInput__Input}`}\n          onChange={(e) => setPrice(e.target.value)}\n          value={price}\n        ></Input>\n        <DatePicker\n          label={\"date\"}\n          className={`${classes.ItemRowInput__date} ${classes.ItemRowInput__Input}`}\n          onChange={(value) => setDate(value)}\n          value={date}\n        ></DatePicker>\n        <Select\n          label={\"store\"}\n          className={`${classes.ItemRowInput__store} ${classes.ItemRowInput__Input}`}\n          onChange={(e) => setStore(e.target.value)}\n          value={store}\n        >\n          {stores}\n        </Select>\n        <Button variant=\"contained\" onClick={handleSubmit}>\n          Submit\n        </Button>\n      </ItemRow>\n    </>\n  );\n};\n\nexport default ItemRowInput;\n","\nexport default (theme) => ({\n    ItemRowInput: {\n\n        // padding: theme.padding.default,\n        // margin: `${theme.margin.default} 0 `,\n        // border: theme.border.default,\n        // borderRadius: theme.borderRadius.default,\n        // display: 'flex',\n        // justifyContent: 'space-between',\n        // alignItems: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexWrap: 'wrap',\n        },\n    },\n    ItemRowInput__Input: {\n        margin: `0`,\n        width: '20%',\n        minWidth: '150px',\n        [theme.breakpoints.down('md')]: {\n            width: '48%',\n            marginBottom: theme.margin.default,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n        },\n    }\n})","import { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport const useGetDataByURL = () => {\n\n    let history = useHistory();\n\n    const isItemsURL = history.location.pathname === \"/list\"\n\n    // TODO: improve\n    const sliceToTakeData =\n        isItemsURL ? \"items\" : \"recievedItems\";\n\n    const { [sliceToTakeData]: dataFromSlice } = useSelector(\n        (state) => state.items\n    );\n\n    return { isItemsURL, dataFromSlice };\n}","import React from \"react\";\nimport MuiStyleFunction from \"./ItemsListItemRow.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { getDate } from \"../../utils\";\nimport Button from \"../Button/Button.jsx\";\nimport { useSelector } from \"react-redux\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst ItemsListItemRow = ({ item, onClick, isShowRecievedButton }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const xsMediaQuery = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const { USDtoILS } = useSelector((state) => state.currency);\n\n  return (\n    <>\n      <div className={classes.ItemsListRowItem__data}>\n        {xsMediaQuery ? (\n          <div className={classes.ItemsListRowItem__data__label}>name</div>\n        ) : null}\n        <div className={classes.ItemsListRowItem__data__value}>{item.name}</div>\n      </div>\n\n      <div className={classes.ItemsListRowItem__data}>\n        {xsMediaQuery ? (\n          <div className={classes.ItemsListRowItem__data__label}>price</div>\n        ) : null}\n        <div\n          className={`${classes.ItemsListRowItem__price} ${classes.ItemsListRowItem__data__value}`}\n        >\n          {USDtoILS ? (\n            <>\n              <div>{`שח`}</div>\n              <div>{`${(item.price * USDtoILS).toFixed(2)}`}</div>\n            </>\n          ) : (\n            \"loading ... \"\n          )}\n        </div>\n      </div>\n\n      <div className={classes.ItemsListRowItem__data}>\n        {xsMediaQuery ? (\n          <div className={classes.ItemsListRowItem__data__label}>date</div>\n        ) : null}\n        <div className={classes.ItemsListRowItem__data__value}>\n          {getDate(item.date)}\n        </div>\n      </div>\n\n      <div className={classes.ItemsListRowItem__data}>\n        {xsMediaQuery ? (\n          <div className={classes.ItemsListRowItem__data__label}>store</div>\n        ) : null}\n        <div className={classes.ItemsListRowItem__data__value}>\n          {item.store}\n        </div>\n      </div>\n      {isShowRecievedButton && <Button onClick={onClick}>Recieved</Button>}\n    </>\n  );\n};\n\nexport default ItemsListItemRow;\n","\nexport default (theme) => ({\n    ItemsListRowItem: {},\n    ItemsListRowItem__price: {\n        display: 'flex',\n    },\n    ItemsListRowItem__data: {\n        width: '20%',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexWrap: 'wrap',\n        }\n    },\n\n})","\nexport const getDate = (date) => {\n    const newDate = new Date(date);\n    return `${newDate.getDate()}/${newDate.getMonth()}/${newDate.getFullYear()}`;\n};","import React from \"react\";\nimport MuiStyleFunction from \"./ItemsListHeader.style\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst ItemsListHeader = ({ isShowRecievedButton }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div\n        className={classes.ItemsListHeader__data}\n      >\n        name\n      </div>\n      <div\n        className={classes.ItemsListHeader__data}\n      >\n        price\n      </div>\n      <div\n        className={classes.ItemsListHeader__data}\n      >\n        date\n      </div>\n      <div\n        className={classes.ItemsListHeader__data}\n      >\n        store\n      </div>\n      {isShowRecievedButton && (\n        <div className={classes.ItemsListHeader__spaceForButton}></div>\n      )}\n    </>\n  );\n};\n\nexport default ItemsListHeader;\n","\nexport default (theme) => ({\n    ItemsListHeader__data: {\n        width: '20%',\n    },\n    ItemsListHeader__spaceForButton: {\n        minWidth: theme.sizes.buttonMinWidth,\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./ItemsList.style\";\nimport { onClick } from \"./ItemsList.logic\";\nimport { makeStyles } from \"@material-ui/core\";\nimport ItemRow from \"../../components/ItemRow/ItemRow.jsx\";\nimport ItemRowInput from \"../../components/ItemRowInput/ItemRowInput.jsx\";\nimport { useGetDataByURL } from \"../../hooks/useGetDataByURL\";\nimport ItemsListItemRow from \"../../components/ItemsListItemRow/ItemsListItemRow.jsx\";\nimport { useDispatch } from \"react-redux\";\nimport ItemsListHeader from \"../../components/ItemsListHeader/ItemsListHeader.jsx\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst ItemsList = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const { dataFromSlice, isItemsURL } = useGetDataByURL();\n\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <div className={classes.itemsList}>\n      <h1>{!isItemsURL ? \"Recieved \" : \"\"}Items List</h1>\n      {!matches ? (\n        <ItemRow>\n          <ItemsListHeader isShowRecievedButton={isItemsURL} />\n        </ItemRow>\n      ) : null}\n      {dataFromSlice &&\n        Object.keys(dataFromSlice).map((key) => (\n          <ItemRow key={key}>\n            <ItemsListItemRow\n              item={dataFromSlice[key]}\n              onClick={() => onClick(dispatch, dataFromSlice[key])}\n              isShowRecievedButton={isItemsURL}\n            />\n          </ItemRow>\n        ))}\n      {isItemsURL && <ItemRowInput />}\n    </div>\n  );\n};\n\nexport default ItemsList;\n","\nexport default (theme) => ({\n    itemsList: {\n        padding: theme.padding.large\n    }\n})","\n\nimport { itemsSlice } from '../../store/slices'\n\nexport const onClick = (dispatch, item) => {\n    dispatch(itemsSlice.actions.recieveItem({ id: item.id }));\n};","import React from \"react\";\nimport MuiStyleFunction from \"./StoresList.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useGetDataByURL } from \"../../hooks/useGetDataByURL\";\nimport { parseData } from \"./StoresList.logic\";\nimport ItemRow from \"../../components/ItemRow/ItemRow.jsx\";\n\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst StoresList = () => {\n  const classes = useStyles();\n  const { dataFromSlice, isItemsURL } = useGetDataByURL();\n\n  const storesData = parseData(dataFromSlice);\n  return (\n    <div className={classes.storesList}>\n      <h1>Sum of Items {!isItemsURL ? \"recieved\" : \"\"} grouped By Stores</h1>\n      {Object.keys(storesData).map((storeName) => (\n        <ItemRow\n          key={storeName}\n        >{`${storeName} : ${storesData[storeName]}`}</ItemRow>\n      ))}\n    </div>\n  );\n};\n\nexport default StoresList;\n","\nexport default (theme) => ({\n    storesList: {\n        padding: theme.padding.large\n    }\n})","export const parseData = (dataFromSlice) => {\n    const storesData = {}\n    Object.keys(dataFromSlice).forEach(key => {\n\n        if (!storesData[dataFromSlice[key].store]) {\n            storesData[dataFromSlice[key].store] = 1;\n        } else {\n            storesData[dataFromSlice[key].store] += 1;\n        }\n    })\n\n    return storesData;\n}","import React from \"react\";\nimport MuiStyleFunction from \"./Link.style\";\nimport {makeStyles} from '@material-ui/core'\nimport {Link as MUILink} from \"react-router-dom\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Link = (props) => {\n  const classes = useStyles();\n\n  return <MUILink {...props} className={classes.link}>{props.children}</MUILink>;\n};\n\nexport default Link;\n","\nexport default (theme) => ({\n    link: {\n        color: theme.colors.default.primary.default\n    }\n})","import React, { useState, useEffect } from \"react\";\nimport MuiStyleFunction from \"./CurrencyIntervalInput.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"../Input/Input.jsx\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"../Button/Button.jsx\";\nimport { currencySlice, snackSlice } from \"../../store/slices\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst CurrencyIntervalInput = () => {\n  const { intervalForCurrencyUpdate } = useSelector((state) => state.currency);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [interval, setInterval] = useState(intervalForCurrencyUpdate);\n\n  useEffect(() => {\n    setInterval(intervalForCurrencyUpdate);\n  }, [intervalForCurrencyUpdate]);\n\n  const handleSubmit = () => {\n    if (interval >= 500) {\n      dispatch(currencySlice.actions.setIntervalForCurrencyUpdate(interval));\n      dispatch(\n        snackSlice.actions.openSnack({\n          message: `succesfully updated the interval to ${interval}`,\n          severity: `success`,\n        })\n      );\n    } else {\n      dispatch(\n        snackSlice.actions.openSnack({\n          message: \"iterval for currency fetch cannot be lower than 500ms\",\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={classes.CurrencyIntervalInput}>\n      Interval for currency update (miliseconds):\n      <Input\n        type=\"number\"\n        value={interval}\n        onChange={(e) => setInterval(e.target.value)}\n      ></Input>\n      <Button onClick={handleSubmit}>submit</Button>\n    </div>\n  );\n};\n\nexport default CurrencyIntervalInput;\n","\nexport default (theme) => ({\n    CurrencyIntervalInput: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        border: theme.border.default,\n        borderRadius: theme.borderRadius.default,\n        padding: theme.padding.default,\n        width: '600px',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n        },\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./Header.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"../Button/Button.jsx\";\nimport Link from \"../Link/Link.jsx\";\nimport CurrencyIntervalInput from \"../CurrencyIntervalInput/CurrencyIntervalInput.jsx\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.Header}>\n      <div className={classes.Header_links}>\n        <Link to=\"/list\">\n          <Button variant=\"contained\">list</Button>\n        </Link>\n        <Link to=\"/received\">\n          <Button variant=\"contained\">received</Button>\n        </Link>\n      </div>\n      <CurrencyIntervalInput />\n    </div>\n  );\n};\n\nexport default Header;\n","\nexport default (theme) => ({\n    Header: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        padding: theme.padding.large\n    },\n    Header_links: {\n        width: '200px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: `0  ${theme.margin.large}  ${theme.margin.large} 0`\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./SnackBar.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { snackSlice } from \"../../store/slices\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst SnackBar = () => {\n  const { open, message, severity = 'error' } = useSelector((state) => state.snack);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    dispatch(snackSlice.actions.closeSnack());\n  };\n\n  return (\n    <Snackbar\n      className={classes.SnackBar}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      open={open}\n      autoHideDuration={2000}\n      onClose={handleClose}\n    >\n      <Alert\n        className={classes.SnackBar__Alert}\n        onClose={handleClose}\n        severity={severity}\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default SnackBar;\n","\nexport default (theme) => ({\n    SnackBar: {\n    },\n    SnackBar__Alert:{\n        display: 'flex',\n        alignItems: 'center',\n\n    }\n})","import React from \"react\";\nimport MuiStyleFunction from \"./Page.style\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport ItemsList from \"../../tabs/ItemsList/ItemsList\";\nimport StoresList from \"../../tabs/StoresList/StoresList.jsx\";\nimport Header from \"../../components/Header/Header.jsx\";\nimport SnackBar from \"../../components/SnackBar/SnackBar.jsx\";\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\nconst Page = () => {\n  const classes = useStyles();\n\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const handleChange = (event, index) => {\n    setTabIndex(index);\n  };\n\n  return (\n    <div className={classes.BoughtPage}>\n      <Header />\n      <SnackBar />\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabIndex}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Items List\" />\n          <Tab label=\"Stores List\" />\n        </Tabs>\n      </AppBar>\n      {tabIndex === 0 && <ItemsList></ItemsList>}\n      {tabIndex === 1 && <StoresList></StoresList>}\n    </div>\n  );\n};\n\nexport default Page;\n","\nexport default (theme) => ({\n    BoughtPage: {}\n})","import { useEffect, useRef } from 'react';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios'\nimport { currencySlice, snackSlice } from \"../store/slices\";\n\nconst fetchCurrency = async (dispatch) => {\n    try {\n        const result = await axios('https://api.exchangeratesapi.io/latest?base=USD&symbols=ILS');\n        console.log(`result`, result)\n        dispatch(currencySlice.actions.setUSDtoILS(result.data.rates.ILS))\n    } catch (e) {\n        dispatch(\n            snackSlice.actions.openSnack({\n                message: `ERROR at fetching curreny from api.exchangeratesapi.io : ${e}`,\n            })\n        );\n    };\n}\n\nexport default (dispatch) => {\n\n\n\n    const currencyUpdateInterval = useRef();\n    const { intervalForCurrencyUpdate } = useSelector((state) => state.currency);\n\n    useEffect(() => { fetchCurrency(dispatch) }, [dispatch]);\n\n    useEffect(() => {\n        currencyUpdateInterval.current && clearInterval(currencyUpdateInterval.current);\n\n        currencyUpdateInterval.current = setInterval(() => fetchCurrency(dispatch), intervalForCurrencyUpdate);\n\n        return () => clearInterval(currencyUpdateInterval.current);\n    }, [intervalForCurrencyUpdate, dispatch])\n\n}","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MuiStyleFunction from './App.style'\nimport { makeStyles } from '@material-ui/core'\nimport { useDispatch } from \"react-redux\";\nimport { itemsSlice } from './store/slices'\nimport Page from './pages/Page/Page.jsx'\nimport useUpdateCurrency from './hooks/useUpdateCurrency'\n\nconst useStyles = makeStyles(MuiStyleFunction);\n\n\nfunction App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useUpdateCurrency(dispatch);\n\n  useEffect(() => {\n    const state = JSON.parse(localStorage.getItem(\"state\"))\n    if (state)\n      dispatch(itemsSlice.actions.initState({ state }))\n  }, [dispatch])\n\n\n  return (\n    <div className={classes.App}>\n      <Router>\n        <Switch>\n          <Route exact path={\"/\"}>\n            <Redirect\n              to={{\n                pathname: \"/list\"\n              }}\n            />\n          </Route>\n          <Route path={\"/list\"}>\n            <Page />\n          </Route>\n          <Route path={\"/received\"}>\n            <Page />\n          </Route>\n          <Route path=\"*\">\n            404\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\nexport default (theme) => ({\n  \"@global\": {\n    \"*, *::before, *::after\": {\n      boxSizing: \"content-box\",\n    },\n    'body': {\n      margin: 0,\n    },\n    'a': {\n      textDecoration: 'none'\n    },\n  },\n\n  App: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.fontSizes.default\n  }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  currencySlice,\n  itemsSlice,\n  snackSlice\n} from \"./slices\";\n\nconst store = configureStore({\n  reducer: {\n    currency: currencySlice.reducer,\n    items: itemsSlice.reducer,\n    snack: snackSlice.reducer,\n  },\n});\n\nexport default store;\n","const colors = {\n  /* base color */\n  base: {\n    default: `#eee`,\n    light: `#fff`,\n    dark: `#999`,\n  },\n  /* primary brand color */\n  primary: {\n    default: `#6610f2`,\n    light: `#8540f5`,\n    dark: `#510bc4`,\n  },\n  /* secondary brand color */\n  secondary: {\n    default: `#dc3545`,\n    light: `#e4606d`,\n    dark: `#bd2130`,\n  },\n  font: {\n    default: `#333`,\n    invert: `#eee`,\n  },\n};\n\nexport default {\n  palette: {\n    primary: {\n      main: colors.primary.default,\n    },\n    secondary: {\n      main: colors.primary.default,\n    },\n  },\n\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n\n  // use this one\n  colors: {\n    default: colors\n  },\n  fontSizes: {\n    h1: `36px`,\n    h2: `28px`,\n    default: `14px`,\n    small: `12px`,\n  },\n  typography: {\n    fontFamily: '\"Varela Round\",Roboto,\"Helvetica Neue\",Arial,sans-serif',\n  },\n  margin: {\n    large: `20px`,\n    default: `10px`,\n  },\n  padding: {\n    large: `20px`,\n    default: `10px`,\n  },\n  border: {\n    default: `1px solid ${colors.primary.default}`,\n  },\n  borderRadius: {\n    default: `10px`,\n  },\n  shadow: {\n    default: \"0px 4px 40px rgba(25, 25, 25, 0.1)\",\n  },\n  sizes: {\n    buttonMinWidth: '90px',\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store/store\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MuiTheme from './MuiTheme'\nimport { Provider } from \"react-redux\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst theme = createMuiTheme(MuiTheme);\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </MuiThemeProvider>\n  </Provider>\n  , \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}